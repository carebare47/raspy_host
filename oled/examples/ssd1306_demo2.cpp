#include <iostream>
#include "OLEDType_SSD1306.h"
#include "OLED_GFX.h"
#include "OLED_SSD1306.h"

OLED_SSD1306 display; 

const unsigned char guitar2 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x3E,
0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x01, 0xE0,
0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x1E, 0x00,
0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x1C, 0x70, 0x00, 0x00, 0x25, 0xE0, 0x00,
0x00, 0x63, 0xC0, 0x00, 0x01, 0xE7, 0x80, 0x00, 0x0F, 0x9F, 0x00, 0x00, 0x1C, 0x3F, 0x00, 0x00,
0x30, 0x1F, 0xE0, 0x00, 0x20, 0x4C, 0x60, 0x00, 0x21, 0x61, 0xC0, 0x00, 0x31, 0xB3, 0x00, 0x00,
0x30, 0xC2, 0x00, 0x00, 0x18, 0x46, 0x00, 0x00, 0x08, 0x16, 0x00, 0x00, 0x0E, 0x54, 0x00, 0x00,
0x07, 0x0C, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char midi2 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x48, 0x40, 0x48, 0x48, 0x00, 0x48, 0x48, 0x00, 0x48, 0x48, 0x00, 0x48, 0x48, 0x00, 0x48, 0x48,
0x00, 0x48, 0x08, 0x40, 0x48, 0x08, 0x40, 0x48, 0x08, 0x40, 0x48, 0x08, 0x48, 0x48, 0x48, 0x48,
0x12, 0x12, 0x12, 0x02, 0x02, 0x10, 0x12, 0x02, 0x10, 0x12, 0x12, 0x10, 0x12, 0x12, 0x10, 0x92,
0x92, 0x10, 0x92, 0x12, 0x10, 0x12, 0x12, 0x10, 0x02, 0x12, 0x10, 0x02, 0x02, 0x12, 0x12, 0x12,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x7F,
0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const unsigned char midi3 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 0xDB, 0x6D, 0xBF,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0xDB, 0x5B, 0x6F, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFB, 0x6D, 0xB6, 0xDF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xE6, 0xFF, 0xFF, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA0, 0x00,
0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char midi4 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 0xDB, 0x6D, 0xBF,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0xDB, 0x5B, 0x6F, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFB, 0x6D, 0xB6, 0xDF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xE6, 0xFF, 0xFF, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA0, 0x00,
0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

long sleep_time;
void show_bmp(unsigned char* img){
	  display.clearDisplay();

	 display.drawBitmap(64,0,img,32,32,1);
 display.display();
 //usleep(sleep_time);
 usleep(sleep_time);

	
}

void show_all(void){
		  display.clearDisplay();
	 display.drawBitmap(0,0,guitar2,32,32,1);
	 
	 //display.drawBitmap(96,0,midi4,32,32,1);
	   display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(82,24);
  display.print("MIDI");
	 usleep(2000);
 display.display();
 //usleep(sleep_time);
 usleep(sleep_time);


		  display.clearDisplay();
	 display.drawBitmap(0,0,guitar2,32,32,1);
	 
	 display.drawBitmap(96,0,midi3,32,32,1);

 usleep(2000);
	 
 display.display();
 //usleep(sleep_time);
 usleep(sleep_time);

}
int main(int argc, char **argv)
{
	int i;
	int sleep_time_secs = 2;
	sleep_time = sleep_time_secs*1000*1000;
	int short_sleep = 1000;

	if ( !display.init(OLED_I2C_RESET,OLED_OLED_I2C_128x32) )
		exit(EXIT_FAILURE);

	display.begin();
		
  display.clearDisplay();



  std::cout << "line\n";
 
 display.drawBitmap(0,0,guitar2,32,32,1);
 	   display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(82,24);
  display.print("MIDI");
 display.display();
 usleep(sleep_time);
display.clearDisplay();
display.clearDisplay();
std::cout << "line\n";


 display.drawBitmap(0,0,guitar2,32,32,1);
 display.drawBitmap(96,0,midi3,32,32,1);
 display.display();
 usleep(sleep_time);
	
}